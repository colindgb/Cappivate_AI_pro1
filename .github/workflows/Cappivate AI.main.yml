const fs = require("fs");
const path = require("path");
const AdmZip = require("adm-zip");
const { execSync } = require("child_process");

// Define project structure
const projectFiles = {
    "cappivate-ai/backend/server.js": `
require('dotenv').config();
const express = require('express');
const cors = require('cors');
const routes = require('./routes');

const app = express();
app.use(cors());
app.use(express.json());
app.use('/api', routes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(\`üöÄ Server running on port \${PORT}\`));
`,

    "cappivate-ai/frontend/index.html": `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cappivate AI</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Welcome to Cappivate AI</h1>
    <p>Link your social media accounts easily.</p>
    <div id="socialMediaLinker"></div>
    <script src="app.js"></script>
</body>
</html>
`,

    "cappivate-ai/frontend/style.css": `
body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f4f4f4;
    padding: 20px;
}
h1 { color: #333; }
input, select, button {
    margin: 10px;
    padding: 10px;
    font-size: 16px;
}
button {
    background-color: #007bff;
    color: white;
    border: none;
    cursor: pointer;
}
`,

    "cappivate-ai/frontend/app.js": `
document.addEventListener("DOMContentLoaded", () => {
    const platforms = ["Facebook", "Instagram", "X (Twitter)", "TikTok", "YouTube"];
    let container = document.getElementById("socialMediaLinker");

    let select = document.createElement("select");
    select.innerHTML = "<option value=''>Select Platform</option>";
    platforms.forEach(platform => {
        select.innerHTML += \`<option value="\${platform}">\${platform}</option>\`;
    });

    let input = document.createElement("input");
    input.type = "text";
    input.placeholder = "Enter profile URL";

    let button = document.createElement("button");
    button.textContent = "Link Account";
    button.onclick = async () => {
        let platform = select.value;
        let profileUrl = input.value;
        if (!platform || !profileUrl) return alert("Please select a platform and enter a URL.");

        let response = await fetch("/api/link", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ userId: "user123", platform, profileUrl })
        });

        let data = await response.json();
        alert(data.message);
    };

    container.appendChild(select);
    container.appendChild(input);
    container.appendChild(button);
});
`,

    "cappivate-ai/database/schema.sql": `
CREATE DATABASE cappivate_ai;
CREATE TABLE linked_accounts (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(50) NOT NULL,
    platform VARCHAR(20) NOT NULL,
    profile_url TEXT NOT NULL
);
`,

    "cappivate-ai/LICENSE": `
MIT License
Permission is hereby granted, free of charge, to any person obtaining a copy of this software...
`,

    "cappivate-ai/README.md": `
# Cappivate AI
Cappivate AI is an AI-powered chatbot and social media integration platform.

## Features
‚úîÔ∏è AI Chat Interface  
‚úîÔ∏è Social Media Linking (Facebook, Instagram, X, TikTok, YouTube)  
‚úîÔ∏è Secure Database & API  
‚úîÔ∏è Automated GitHub Deployment  

## Setup Instructions
### Backend Setup
1. Install dependencies:  
   \`\`\`sh
   cd backend && npm install
   \`\`\`
2. Start the backend:  
   \`\`\`sh
   node server.js
   \`\`\`

### Frontend Setup
1. Open \`frontend/index.html\` in a browser.

## Deployment
- **Backend:** AWS EC2  
- **Frontend:** Vercel  
- **Database:** PostgreSQL  

## License
This project is licensed under the MIT License.
`
};

// Create directories and files
Object.keys(projectFiles).forEach(filePath => {
    const dir = path.dirname(filePath);
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
    fs.writeFileSync(filePath, projectFiles[filePath].trim());
});
console.log("‚úÖ All files created successfully!");

// Zip the entire project
const zip = new AdmZip();
zip.addLocalFolder("cappivate-ai");
zip.writeZip("CappivateAI.zip");
console.log("‚úÖ CappivateAI.zip created successfully!");

// (Optional) Upload to Google Drive (Requires manual sharing)
console.log("\nüöÄ Upload the ZIP file to Google Drive manually & get the shareable link.");
console.log("1Ô∏è‚É£ Upload 'CappivateAI.zip' to Google Drive.");
console.log("2Ô∏è‚É£ Right-click the file ‚Üí 'Get Link' ‚Üí Set to 'Anyone with the link'.");
console.log("3Ô∏è‚É£ Share the generated download link.");
